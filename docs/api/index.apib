FORMAT: 1A

# Group Basics

## Introduction

The API consists of a collection of methods, grouped by areas of functionality.
The naming convention is `group.actionName`.

The supported ways of invoking these methods (including how to provide
authentication and pass arguments) is described in detail
[here](common-conventions.html).

## Examples

The [examples](examples-index.html) page features some ways in which the API can
be consumed.

## Batching requests

UDS supports invoking multiple API methods with one request.

[Batch API documentation](method-batch.html) 

# Group Methods

## authz

Manage the authorization modes for cross-user access to user data.

| Method                                                    | Description
|:---                                                       |:---
| [authz.register](method-authz.register.html)              | Registers an authorization mode
| [authz.info](method-authz.info.html)                      | Gets information about an authorization mode
| [authz.list](method-authz.list.html)                      | Lists all authorization modes
| [authz.remove](method-authz.remove.html)                  | Unregisters an authorization mode

## apps

Manage the apps allowed to save data to the service.

| Method                                                          | Description
|:---                                                             |:---
| [apps.register](method-apps.register.html)                      | Registers an app
| [apps.info](method-apps.info.html)                              | Gets information about an app
| [apps.list](method-apps.list.html)                              | Lists all registered apps
| [apps.remove](method-apps.remove.html)                          | Unregisters an app
| [apps.setPerUserQuota](method-apps.setPerUserQuota.html)        | Sets per-user storage quota for an app
| [apps.removePerUserQuota](method-apps.removePerUserQuota.html)  | Removes per-user storage quota for an app

## data.admin

Data admin APIs.

| Method                                                    | Description
|:---                                                       |:---
| [data.admin.apps](method-data.admin.apps.html)            | Lists all apps with records for a given user

## data.app

Manages data on a per application, per user basis.

| Method                                                    | Description
|:---                                                       |:---
| [data.app.delete](method-data.app.delete.html)  | Removes a document
| [data.app.get](method-data.app.get.html)        | Retrieves a document
| [data.app.list](method-data.app.list.html)      | Lists all documents for a given user
| [data.app.merge](method-data.app.merge.html)    | Merges a document with an existing one
| [data.app.query](method-data.app.query.html)    | Retrieves all documents for a given user that start with a given key prefix
| [data.app.set](method-data.app.set.html)        | Stores a document

## data.user

Manages created content data on a per user basis.

| Method                                                    | Description
|:---                                                       |:---
| [data.user.delete](method-data.user.delete.html)          | Removes a record from the user store
| [data.user.get](method-data.user.get.html)                | Retrieves a record from the user store
| [data.user.getShared](method-data.user.getShared.html)    | Retrieves a record from the user store
| [data.user.list](method-data.user.list.html)              | Lists all records for a given user
| [data.user.query](method-data.user.query.html)            | Retrieves all records for a given user that match a given key prefix
| [data.user.set](method-data.user.set.html)                | Stores a record in the user store
| [data.user.share](method-data.user.share.html)            | Shares a record in the user store with other users
| [data.user.unshare](method-data.user.unshare.html)        | Unshares a record in the user store with other users

## data.cb

Manages calculated behavior data. Calculated behavior is data which is implicitly set on the user (as opposed to explicitly which would be data set at the user's explicit request to store data).

| Method                                                    | Description
|:---                                                       |:---
| [data.cb.increment](method-data.cb.increment.html)        | Increments the existing numeric value stored at the specified key by one.
| [data.cb.decrement](method-data.cb.decrement.html)        | Decrements the existing numeric value stored at the specified key by one.
| [data.cb.get](method-data.cb.get.html)                    | Retrieves the current value for the specified key for a user.
| [data.cb.query](method-data.cb.query.html)                | Retrieves all keys that begin with a given prefix for a user.
| [data.cb.set](method-data.cb.set.html)                    | Stores a new value for the specified key for a user.
| [data.cb.unset](method-data.cb.unset.html)                | Removes any stored value for the specified key for a user.
| [data.cb.merge](method-data.cb.merge.html)                | Merges the specified value with the existing object stored at the specified key.
