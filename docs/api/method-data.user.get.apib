FORMAT: 1A

# data.user.get

Retrieve data for a given user. This method is intended to access data stored by the user;
accessing a _different_ user's data should use [data.user.getShared](method-data.user.getShared.html).

:[](common-args.md url:"data.user.get" token:"Can be used with either a service token or a user token.")

| Argument      | Example               | Required  | Description
|:---           |:---                   |:---       |:---
| `key`         | `annotation_id123`    | Required  | A unique key to identify the data being stored.
| `requestor`   | `user_345`            | Optional  | The user making the request. Required if token type is service token.
| `owner`       | `user_789`            | Optional  | The user whose data is being accessed. Defaults to `requestor` if not specified.

## Result
The `createdBy` field will always be returned to identify the user who created the item.
`updatedBy` will be present only on items which have undergone a `merge` operation and
will reflect the most recent user to have performed a `merge` on the item.

```javascript
{
    "ok": true,
    "result": {
        "createdBy": "user_789",
        "key":  "annotation_id123",
        "type": "text",
        "data": "data"
    }
}
```

## Errors

:[](common-errors.md)

| Error             | Description
|:---               |:---
| `not_authed`      | No authentication token provided.
| `invalid_auth`    | `requestor` does not have access to `owner` content.
| `invalid_key`     | `key` does not conform to the naming rules.
| `invalid_user`    | `owner` or `requestor` is not a valid user identifier.
| `user_not_found`  | Service token used and `requestor` not specified.
