FORMAT: 1A

# Performance Characteristics

The UDS service currently has three primary components: Calculated Behavior,
User Generated Content, and Persisted Application Data. Each of these components
has a slightly different set of expected performance characteristics.

The Calculated Behavior component will be very write-heavy, hooking up to the
HMH Kafka event service and listening for automatically generated events and
notifications from across HMH services, while read events will typically be
triggered by human interaction. This service will frequently be writing or
updating data in the DB, on every login event or any student advancing to the
next page in their lesson plan. Reads will likely be more infrequent, like
when a user navigates to their course book or loads a page to show their
achievements. Additionally, while data integrity is always important, losing a
login event or showing a student an earlier page is a survivable scenario.

The User Generated Content and Persisted Application Data components are slightly
different. In these cases, the write events will also be generated by user actions,
but the read events are likely to be more frequent. A teacher may create a snippet
or a piece of content once, but share it across many students who all need it
to take an exam. Availability is far more critical in these components, since
the user generated content will be used in time-sensitive activities like
assessments where the content needs to be saved and available on demand to
avoid blocking user progress.

Outside of this, UDS will presumably have an elevated workload on weekdays and
mornings during the school year, with a drop in user activity in the evenings.
It will be critical that UDS can be horizontally scaled as needed during periods
of heavy use and scaled back down when activity slows.

# Performance Targets

Many of the scenarios that UDS will enable do not exist today, so we don't
have current performance measurements in most cases. We will try to set
initial performance targets based on an estimate of traffic and event flow.

Currently, the user annotation system does about 650 transactions per second,
of which about 60-80% are automated bookmarks. Based on our investigation, this
is currently the largest usage scenario for UDS. Kibana logs show somewhere
under 200 login events/messages per minute on production environments, and
approximately 500 Auth0 related messages per minute, although that is likely to
increase as new HMH services come online in the future.

We are currently planning to implement the Calculated Behavior component using
DynamoDB, which should be able to easily scale to handle increased write loads
based on the incoming event stream. The remaining components may warrant an
alternate DB technology and an alternate set of service instances, which we will
revisit in future sprints.
