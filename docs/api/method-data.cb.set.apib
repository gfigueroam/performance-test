FORMAT: 1A

# data.cb.set

Sets the value stored at the specified `key`, overwriting any previously existing value.

The type of the `data` parameter will affect what future operations are permitted on
the key. For example, `data.cb.increment` will not be allowed if `data` is not numeric.

See [Naming rules](common-names.html) for more information on names.

:[](common-args.md url:"data.cb.set" token:"Can be used with either a service token or a user token.")

| Argument          | Example           | Required  | Description
|:---               |:---               |:---       |:---
| `key`             | `loginCount`      | Required  | The key whose stored value is to be updated.
| `data`            | `"any value"`     | Required  | Any value is permitted: a JSON object, an array, a number, a string, or a boolean.
| `user`            | `<userID>`        | Optional  | The user whose stored value is to be updated. Required when a service token is used, otherwise is derived from the user auth token.

## Result

```javascript
{
    "ok": true
}
```

## Errors

:[](common-errors.md)

| Error                     | Description
|:---                       |:---
| `invalid_key`             | `key` does not conform to the naming rules.
| `key_not_found`           | `key` does not describe an existing key for user.
| `invalid_data`            | `data` is missing or not a supported type.
| `invalid_user`            | `user` is not a valid user identifier.
| `user_not_found`          | User specified in `user` or user token was not found.
| `forbidden`               | Token is a user token, and user was specified and did not match.
