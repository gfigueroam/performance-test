FORMAT: 1A

# data.cb.get

Retrieves whatever value is stored under the specified key for a user.

See [Naming rules](common-names.html) for more information on names.

:[](common-args.md url:"data.cb.get" token:"Can be used with either a service token or a user token.")

| Argument          | Example           | Required  | Description
|:---               |:---               |:---       |:---
| `key`             | `annotations`     | Required  | The key whose stored value is to be returned.
| `requestor`       | `user_345`        | Optional  | The user making the request. Required if token type is service token.
| `owner`           | `user_789`        | Optional  | The user whose data is being accessed. Defaults to `requestor` if not specified.

## Result
The result is an object including whatever value is stored at the specified
`key` for the user identified by the authentication token or `owner` parameter.
The `data` param will be either a `number`, a `string`, a `boolean`, an `object`, or
an `array`. If the key has not been set for the user, the result will be `undefined`.

```javascript
{
    "ok": true,
    "result": {
        "createdBy": "user_789",
        "key":  "user.789.annotation",
        "data": {
          "contentIdA": {...},
          "contentIdC": {...}
        },
        "updatedBy": "user_789"
    }
}
```

## Errors

:[](common-errors.md)

| Error                     | Description
|:---                       |:---
| `not_authed`              | No authentication token provided.
| `invalid_auth`            | `requestor` does not have access to `owner` content.
| `invalid_key`             | `key` does not conform to the naming rules.
| `invalid_user`            | `owner` or `requestor` is not a valid user identifier.
| `user_not_found`          | Service token used and `requestor` not specified.
